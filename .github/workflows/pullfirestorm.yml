name: Auto Pull from Firestorm Repository

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eigenes Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Hole Standard-Branch von Firestorm
        id: get_default_branch
        run: |
          DEFAULT_BRANCH=$(curl -s https://api.github.com/repos/FirestormViewer/phoenix-firestorm | jq -r .default_branch)
          echo "default_branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT
          echo "üì¶ Standard-Branch ist: $DEFAULT_BRANCH"

      - name: Firestorm Remote hinzuf√ºgen und fetchen
        run: |
          git remote add firestorm https://github.com/FirestormViewer/phoenix-firestorm.git
          git fetch firestorm ${{ steps.get_default_branch.outputs.default_branch }}

      - name: Check f√ºr √Ñnderungen
        id: check_changes
        run: |
          if ! git diff --quiet HEAD firestorm/${{ steps.get_default_branch.outputs.default_branch }}; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "‚úÖ √Ñnderungen gefunden"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "‚ùå Keine √Ñnderungen gefunden"
          fi

      - name: Merge √Ñnderungen
        id: merge_and_push
        if: steps.check_changes.outputs.changes_detected == 'true'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}   # -> PAT mit repo+workflow scopes
        run: |
          set -euo pipefail
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Merge versuchen
          if git merge --no-edit "firestorm/${{ steps.get_default_branch.outputs.default_branch }}"; then
            echo "merge_success=true" >> $GITHUB_OUTPUT
          else
            echo "merge_success=false" >> $GITHUB_OUTPUT
            echo "Konflikte erkannt ‚Äî automatische Aufl√∂sung starten"

            UNMERGED_FILES=$(git ls-files -u | awk '{print $4}' | sort -u || true)

            for f in $UNMERGED_FILES; do
              if [[ "$f" == .github/workflows/* ]]; then
                # F√ºr Workflow-Dateien: beziehe die Version von firestorm (theirs)
                git checkout --theirs -- "$f" || true
                git add "$f" || true
              else
                # F√ºr andere Dateien: behalte eigene Version (ours)
                git checkout --ours -- "$f" || true
                git add "$f" || true
              fi
            done

            if git status --porcelain | grep -q '^'; then
              git commit -m "Auto-merge: resolve conflicts (prefer firestorm for workflows)"
            fi
          fi

          BASE_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "base_branch=$BASE_BRANCH" >> $GITHUB_OUTPUT

          # Origin so setzen, dass das PAT f√ºr Push verwendet wird
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}

          # Direkt pushen; falls abgelehnt (z.B. Branch-Protection), neuer Branch + Push
          if git push origin "$BASE_BRANCH"; then
            echo "pushed=true" >> $GITHUB_OUTPUT
            echo "pr_branch=" >> $GITHUB_OUTPUT
            echo "‚úÖ Direkt auf $BASE_BRANCH gepusht"
          else
            echo "pushed=false" >> $GITHUB_OUTPUT
            NEW_BRANCH="firestorm-update-$(date +%s)"
            git branch -m "$NEW_BRANCH"
            git push -u origin "$NEW_BRANCH"
            echo "pr_branch=$NEW_BRANCH" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Push blockiert; neuer Branch $NEW_BRANCH erstellt und gepusht"
          fi

      - name: Starte Build Workflow
        if: steps.merge_and_push.outputs.pushed == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Phoenix-FirestormOS.yml
          token: ${{ secrets.GH_PAT }}

      - name: Erstelle Pull Request
        if: steps.merge_and_push.outputs.pushed == 'false'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -euo pipefail
          PR_BRANCH="${{ steps.merge_and_push.outputs.pr_branch }}"
          BASE_BRANCH="${{ steps.merge_and_push.outputs.base_branch }}"
          echo "Erstelle Pull Request: $PR_BRANCH -> $BASE_BRANCH"

          response=$(curl -s -X POST \
            -H "Authorization: token ${GH_PAT}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d "$(jq -n --arg t "Auto-sync: Merge Firestorm changes" \
                        --arg head "$PR_BRANCH" \
                        --arg base "$BASE_BRANCH" \
                        --arg body "Automatisch erstellt: √Ñnderungen aus Firestorm zusammengef√ºhrt." \
                        '{title: $t, head: $head, base: $base, body: $body}')")

          pr_url=$(echo "$response" | jq -r .html_url // empty)
          if [ -n "$pr_url" ]; then
            echo "‚úÖ Pull Request erstellt: $pr_url"
          else
            echo "‚ùå Fehler beim Erstellen des Pull Requests:"
            echo "$response"
            exit 1
          fi
