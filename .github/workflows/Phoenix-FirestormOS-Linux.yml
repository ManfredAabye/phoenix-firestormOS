name: Build and Release Phoenix-FirestormOS OpenAL WebRTC AVX2 Linux64

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ==== Server Setup (Linux statt Windows) ====
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build clang \
            git curl doxygen gdb \
            libgl1-mesa-dev libglu1-mesa-dev \
            libx11-dev libxinerama-dev libxrender-dev \
            libxml2-dev zlib1g-dev \
            python3 python3-venv python3-pip \
            ruby ruby-dev rubygems

          # fpm f√ºr .deb-Erstellung
          sudo gem install --no-document fpm

      # ==== Python + Autobuild ====
      - name: Setup Python venv
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install autobuild llbase llsd

      # ==== Quellen holen ====
      - name: Clone Sources
        run: |
          mkdir -p build
          git clone https://github.com/FirestormViewer/phoenix-firestorm.git build/phoenix-firestorm
          git clone https://github.com/FirestormViewer/fs-build-variables.git build/fs-build-variables

      # ==== Build ====
      - name: Build with Autobuild
        run: |
          set -e
          source venv/bin/activate
          export AUTOBUILD_VARIABLES_FILE=$PWD/build/fs-build-variables/variables
          cd build/phoenix-firestorm

          pip install -r requirements.txt

          # OpenAL
          autobuild installables remove openal
          autobuild installables add openal platform=linux64 git=https://github.com/secondlife/3p-openal-soft.git commit=<latest-commit-hash> hash_algorithm=sha1 hash=<computed-sha1-of-commit>
          
          # Assimp
          autobuild installables remove assimp
          autobuild installables add assimp platform=linux64 git=https://github.com/secondlife/3p-assimp.git commit=<latest-commit-hash> hash_algorithm=sha1 hash=<computed-sha1-of-commit>
          
          # WebRTC
          autobuild installables remove webrtc
          autobuild installables add webrtc platform=linux64 git=https://github.com/secondlife/3p-webrtc-build.git commit=<latest-commit-hash> hash_algorithm=sha1 hash=<computed-sha1-of-commit>


          autobuild configure --config-file autobuild.xml -A 64 -c ReleaseFS_open -- --avx2 --openal --package --chan WebRTC
          autobuild build --config-file autobuild.xml -A 64 -c ReleaseFS_open --no-configure --verbose

      # ==== Packaging ====
      - name: Package Artifacts (.tar.xz, .tar.gz, .deb)
        run: |
          cd build/phoenix-firestorm/build-linux-x86_64/newview

          PKGNAME=Phoenix-FirestormOS-WebRTC_AVX2-${GITHUB_RUN_ID}
          DESTDIR=$PWD/../../packages
          mkdir -p $DESTDIR

          # tar.xz
          tar -cJf $DESTDIR/${PKGNAME}.tar.xz .
          # tar.gz
          tar -czf $DESTDIR/${PKGNAME}.tar.gz .
          # deb
          fpm -s dir -t deb -n phoenix-firestorm -v ${GITHUB_RUN_ID} \
              --prefix /opt/firestorm ./ \
              -p $DESTDIR/${PKGNAME}.deb

          echo "artifact_tarxz=$DESTDIR/${PKGNAME}.tar.xz" >> $GITHUB_OUTPUT
          echo "artifact_targz=$DESTDIR/${PKGNAME}.tar.gz" >> $GITHUB_OUTPUT
          echo "artifact_deb=$DESTDIR/${PKGNAME}.deb" >> $GITHUB_OUTPUT

      # ==== Release ====
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_id }}
          name: "Phoenix-FirestormOS OpenAL WebRTC AVX2 ${{ github.run_id }}"
          body: "Unofficial Automatic Nightly Linux Build"
          files: |
            ${{ steps.package.outputs.artifact_tarxz }}
            ${{ steps.package.outputs.artifact_targz }}
            ${{ steps.package.outputs.artifact_deb }}
