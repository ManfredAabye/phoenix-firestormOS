name: Windows Server 2025 Setup

on:
  workflow_call:
    outputs:
      setup_complete:
        description: "Setup abgeschlossen"
        value: true

jobs:
  setup:
    runs-on: windows-latest

    steps:
      - name: Bereinige Build-Verzeichnisse (CMD)
        shell: cmd
        run: |
          rmdir /S /Q C:\Firestorm_Build
          rmdir /S /Q C:\temp
          del /F /Q %TEMP%\* >nul 2>&1

      - name: Bereinige temporäre Dateien (PowerShell)
        shell: powershell
        run: |
          Remove-Item -Recurse -Force "C:\Firestorm_Build" -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force "$env:TEMP\*" -ErrorAction SilentlyContinue

      - name: Installiere Chocolatey
        shell: powershell
        run: |
          if (-not (Test-Path "$env:ProgramData\\Chocolatey\\bin\\choco.exe")) {
            Set-ExecutionPolicy Bypass -Scope Process -Force
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
            Start-Sleep -Seconds 30
            & "$env:ProgramData\\Chocolatey\\bin\\refreshEnv.cmd"
          }

      - name: Installiere Visual Studio Build Tools
        shell: powershell
        run: |
          choco install -y --no-progress visualstudio2022buildtools --package-parameters="--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --passive"

      - name: Prüfe Visual Studio Toolchain mit vswhere
        shell: powershell
        run: |
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          if (-not (Test-Path $vswhere)) {
            Invoke-WebRequest -Uri "https://github.com/microsoft/vswhere/releases/latest/download/vswhere.exe" -OutFile $vswhere
          }
          $vsBuildTools = & $vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          if (-not $vsBuildTools) {
            Write-Error "Visual Studio Build Tools mit VC++ wurden nicht gefunden!"
            exit 1
          } else {
            Write-Host "Visual Studio Build Tools gefunden unter: $vsBuildTools"
          }

      - name: Installiere Python 3.10.11 über Chocolatey
        shell: powershell
        run: |
          choco install -y python --version=3.10.11 --installargs 'TARGETDIR="C:\Python310"'
          $env:Path += ";C:\Python310;C:\Python310\Scripts"
          $pyVersion = & "C:\Python310\python.exe" --version
          if (-not ($pyVersion -like "*3.10.11*")) {
            Write-Error "Python 3.10.11 wurde nicht korrekt installiert."
            exit 1
          } else {
            Write-Host "Python-Version bestätigt: $pyVersion"
          }

      - name: Installiere zusätzliche Tools
        shell: powershell
        run: |
          choco install -y --no-progress cmake git nsis cygwin 7zip ninja

      - name: Installiere Cygwin-Paket „patch“
        shell: powershell
        run: |
          $cygwinSetup = "C:\tools\cygwin\setup-x86_64.exe"
          if (Test-Path $cygwinSetup) {
            & $cygwinSetup -q -P patch
          } else {
            Write-Warning "Cygwin-Setup nicht gefunden. Patch-Paket konnte nicht installiert werden."
          }

      - name: Setup abgeschlossen
        shell: bash
        run: echo "Setup erfolgreich abgeschlossen."
