name: Build and Release Phoenix-FirestormOS OpenAL WebRTC AVX2 Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Firestorm Build in Single CMD Process
        run: |
          @echo off
          setlocal enabledelayedexpansion

          set "SCRIPT_DIR=%CD%"
          set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%"
          set "PYTHON_VERSION=3.10.11"
          set "BUILD_DIR=%SCRIPT_DIR%\Firestorm_Build"
          set "VENV_DIR=%BUILD_DIR%\venv"
          set "ProgramFiles=C:\Program Files"
          set "AUTOBUILD_INSTALL_DIR=%BUILD_DIR%\packages"
          set "ARCH=64"
          set "CONFIG=ReleaseFS_open"
          set "OUTPUT_DIR=%BUILD_DIR%\phoenix-firestorm\build-vc170-64\newview\Release"
          set "AUTO_BUILD_CONFIG=%BUILD_DIR%\phoenix-firestorm\autobuild.xml"
          set "AUTOBUILD_VARIABLES_FILE=%BUILD_DIR%\fs-build-variables\variables"

          choco install -y --no-progress visualstudio2022community ^
            --package-parameters="--add Microsoft.VisualStudio.Workload.NativeDesktop ^
            --add Microsoft.VisualStudio.Component.VC.14.16.x86.x64 ^
            --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"

          if not exist "%ProgramData%\Chocolatey\bin\choco.exe" (
              powershell -NoProfile -ExecutionPolicy Bypass -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; iex (New-Object Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')"
              timeout /t 30
              call "%ProgramData%\Chocolatey\bin\refreshEnv.cmd"
          )

          choco install -y --no-progress --stop-on-first-failure ^
            cmake ^
            git ^
            python ^
            nsis ^
            cygwin ^
            7zip ^
            doxygen

          C:\cygwin64\cygwinsetup.exe -q -P patch

          set "AUTOBUILD_TEMP=%SCRIPT_DIR%\temp"
          if not exist "%AUTOBUILD_TEMP%" mkdir "%AUTOBUILD_TEMP%"
          set "TMP=%AUTOBUILD_TEMP%"
          set "TEMP=%AUTOBUILD_TEMP%"

          set "FS_INCLUDE_SOURCE=%SCRIPT_DIR%\fs_include"
          set "FS_INCLUDE_DEST=%BUILD_DIR%\fs_include"

          mkdir "%BUILD_DIR%" 2>nul

          if not exist "%VENV_DIR%" (
              python -m venv "%VENV_DIR%"
              call "%VENV_DIR%\Scripts\activate.bat"
              python -m pip install --upgrade pip
              python -m pip install --force-reinstall --no-cache-dir llbase llsd autobuild
          ) else (
              call "%VENV_DIR%\Scripts\activate.bat"
          )

          if exist "%FS_INCLUDE_SOURCE%" (
              xcopy /E /I /Y "%FS_INCLUDE_SOURCE%" "%FS_INCLUDE_DEST%\" >nul
          )

          set "ASSIMP_ROOT=%FS_INCLUDE_DEST%\assimp-windows64-5.2.5-r3"
          set "OPENAL_ROOT=%FS_INCLUDE_DEST%\openal-1.24.2-r1-windows64-13245988487"

          if not exist "%BUILD_DIR%\phoenix-firestorm\.git" (
              git clone "https://github.com/FirestormViewer/phoenix-firestorm.git" "%BUILD_DIR%\phoenix-firestorm"
          ) else (
              git -C "%BUILD_DIR%\phoenix-firestorm" pull
          )

          if not exist "%BUILD_DIR%\fs-build-variables\.git" (
              git clone "https://github.com/FirestormViewer/fs-build-variables.git" "%BUILD_DIR%\fs-build-variables"
          ) else (
              git -C "%BUILD_DIR%\fs-build-variables" pull
          )

          if not exist "%BUILD_DIR%\fs-build-variables" (
              xcopy /E /I /Y "%SCRIPT_DIR%\fs-build-variables" "%BUILD_DIR%\fs-build-variables" >nul 2>&1
          )

          xcopy /y fs_include\vivox_logo.png Firestorm_Build\phoenix-firestorm\indra\newview\skins\default\textures\3p_icons\
          xcopy /E /I /Y "Skin\skins.xml" "Firestorm_Build\phoenix-firestorm\indra\newview\skins"
          xcopy /E /I /Y "Skin\singularity" "Firestorm_Build\phoenix-firestorm\indra\newview\skins\singularity"
          xcopy /E /I /Y "fs_include\OPENAL.cmake" "Firestorm_Build\phoenix-firestorm\indra\cmake"
          xcopy /E /I /Y "fs_include\Assimp.cmake" "Firestorm_Build\phoenix-firestorm\indra\cmake"

          if not exist "%FS_INCLUDE_DEST%\" (
              xcopy /E /I /Y "%FS_INCLUDE_SOURCE%" "%FS_INCLUDE_DEST%\" >nul
          )

          if exist "%BUILD_DIR%\phoenix-firestorm\build-vc170-64\newview\Release\" (
              copy /Y "%SCRIPT_DIR%\fs_include\OpenAL32.dll" "%BUILD_DIR%\phoenix-firestorm\build-vc170-64\newview\Release\" >nul
              copy /Y "%SCRIPT_DIR%\fs_include\alut.dll" "%BUILD_DIR%\phoenix-firestorm\build-vc170-64\newview\Release\" >nul
              copy /Y "%SCRIPT_DIR%\fs_include\featuretable.txt" "%BUILD_DIR%\phoenix-firestorm\build-vc170-64\newview\Release\" >nul
          )

          set "AUTOBUILD_VSVER=170"
          python -m pip install -r "%BUILD_DIR%\phoenix-firestorm\requirements.txt"

          copy /Y "%SCRIPT_DIR%\fs_include\autobuild.xml" "%BUILD_DIR%\phoenix-firestorm\autobuild.xml"

          set "VS2022BAT="
          for %%D in ("C:\Program Files\Microsoft Visual Studio\2022\Community") do (
              if exist "%%~D\VC\Auxiliary\Build\vcvarsall.bat" (
                  set "VS2022BAT=%%~D\VC\Auxiliary\Build\vcvarsall.bat"
              )
          )

          call "%VS2022BAT%" x64

          if exist "%VENV_DIR%\Scripts\activate.bat" (
              call "%VENV_DIR%\Scripts\activate.bat"
          )

          autobuild installables edit openal platform=windows64 url=https://github.com/secondlife/3p-openal-soft/releases/download/v1.24.2-r1/openal-1.24.2-r1-windows64-13245988487.tar.zst hash_algorithm=sha1 hash=8ad24fba1191c9cb0d2ab36e64b04b4648a99f43

          autobuild installables remove assimp
          autobuild installables add assimp platform=windows64 url=https://github.com/secondlife/3p-assimp/releases/download/v5.2.5-r3/assimp-windows64-5.2.5-r3.tar.bz2 hash=8b878487089380b43a8b2109dfc6ab8bbebd4009 hash_algorithm=sha1

          autobuild installables remove webrtc
          autobuild installables add webrtc platform=windows64 url=https://github.com/secondlife/3p-webrtc-build/releases/download/m114.5735.08.73-alpha/webrtc-m114.5735.08.73-alpha.11958809572-windows64-11958809572.tar.zst hash_algorithm=sha1 hash=c7b329d6409576af6eb5b80655b007f52639c43b

          autobuild configure --config-file "%AUTO_BUILD_CONFIG%" -A 64 -c ReleaseFS_open -- --avx2 --openal --package --chan WebRTC
          autobuild build --config-file "%AUTO_BUILD_CONFIG%" -A 64 -c ReleaseFS_open --no-configure --verbose

          if not exist "%SCRIPT_DIR%\Firestorm_Build\phoenix-firestorm\build-vc170-64\newview\Release" (
              xcopy /Y alut.dll %SCRIPT_DIR%\Firestorm_Build\phoenix-firestorm\build-vc170-64\newview\Release
              xcopy /Y OpenAL32.dll %SCRIPT_DIR%\Firestorm_Build\phoenix-firestorm\build-vc170-64\newview\Release
              autobuild package -A 64 --config-file autobuild.xml
          )

          dir /b "%SCRIPT_DIR%\Firestorm_Build\phoenix-firestorm\build-vc170-64\newview\Release"
